{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PLCN_v1",
        "update_url": "https:\/\/github.com\/kylegroves6\/Pelican-Egg-Configs\/blob\/main\/Eggs\/Minecraft\/Purpur\/Purpur-for-Velocity\/egg-purpur-velocity-network.json"
    },
    "exported_at": "2025-06-30T22:39:39+00:00",
    "name": "Purpur (for Velocity)* - MC 1.13+ (Only) + Plugins",
    "author": "kylegroves6@gmail.com",
    "uuid": "fa831ecc-848e-4132-b518-7fc0012c0295",
    "description": "Based on My 'Purpur (for Velocity)* - MC 1.13+ (Only)' Egg\nThis Egg automatically downloads plugins from my GitHub Repo for all servers on the network\n\nSPECIALIZED EGG:\nFor use as a backend server with a Velocity proxy (one with {player-info-forwarding-mode = \"modern\"} in velocity.toml). NOT for standalone use. This egg automatically applies some of the necessary settings for a proxied environment upon server startup.\n--------\n\nAUTOMATIC CHANGES:\n- server.properties: `online-mode` is set to `false`.\n\nMANUAL STEP REQUIRED:\n1. Open the `config\/paper-global.yml` file\n2. You MUST set proxies.velocity.enabled to true \n3. You MUST manually copy the key from your Velocity's `forwarding.secret` file and paste it into this server's `config\/paper-global.yml` file below where you set (STEP 2).",
    "tags": [
        "velocity",
        "preconfigured",
        "purpur",
        "minecraft",
        "MC 1.13+ (ONLY)"
    ],
    "features": [
        "eula",
        "java_version",
        "auto_plugins"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/parkervcp\/yolks:java_21",
        "Java 17": "ghcr.io\/parkervcp\/yolks:java_17"
    },
    "file_denylist": [],
    "startup": "java --add-modules=jdk.incubator.vector -Xms128M -XX:MaxRAMPercentage=95.0 -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled -XX:+PerfDisableSharedMem -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:G1HeapRegionSize=8M -XX:G1HeapWastePercent=5 -XX:G1MaxNewSizePercent=40 -XX:G1MixedGCCountTarget=4 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1NewSizePercent=30 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:G1ReservePercent=20 -XX:InitiatingHeapOccupancyPercent=15 -XX:MaxGCPauseMillis=200 -XX:MaxTenuringThreshold=1 -XX:SurvivorRatio=32 -Dusing.aikars.flags=https:\/\/mcflags.emc.gs -Daikars.new.flags=true -jar {{SERVER_JARFILE}} nogui",
    "config": {
        "files": "{\n  \"server.properties\": {\n    \"parser\": \"properties\",\n    \"find\": {\n      \"online-mode\": \"false\",\n      \"server-ip\": \"0.0.0.0\",\n      \"server-port\": \"{{server.allocations.default.port}}\"\n    }\n  }\n}",
        "startup": "{\n    \"done\": \")! For help, type \"\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\n# Purpur Installation Script v4 - Full Private & Public Plugin Deployment\r\n\r\n# --- Log Start ---\r\necho \"INFO: Starting advanced server installation...\"\r\n\r\n# --- Preamble: Install necessary tools ---\r\n# Added 'git' for cloning private repositories\r\napk add --no-cache curl jq git\r\n\r\n# --- Step 1: Download the Purpur Server JAR ---\r\nPROJECT=purpur\r\necho \"INFO: Determining latest Purpur version...\"\r\n# Using your existing logic to get the correct Purpur JAR\r\nif [ -n \"${DL_PATH}\" ]; then\r\n    echo -e \"INFO: Using supplied download url: ${DL_PATH}\"\r\n    DOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\nelse\r\n    VER_EXISTS=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep true`\r\n    LATEST_VERSION=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n    if [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n        MINECRAFT_VERSION=${MINECRAFT_VERSION}\r\n    else\r\n        MINECRAFT_VERSION=${LATEST_VERSION}\r\n    fi\r\n    BUILD_EXISTS=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds.all | tostring | contains($BUILD)' | grep true`\r\n    LATEST_BUILD=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r '.builds.latest'`\r\n    if [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n        BUILD_NUMBER=${BUILD_NUMBER}\r\n    else\r\n        BUILD_NUMBER=${LATEST_BUILD}\r\n    fi\r\n    JAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n    DOWNLOAD_URL=https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION}\/${BUILD_NUMBER}\/download\r\nfi\r\necho \"INFO: Downloading Purpur from ${DOWNLOAD_URL}\"\r\ncurl -L -o \/mnt\/server\/${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\r\n# --- Step 2: Download Server Properties if Needed ---\r\nif [ ! -f server.properties ]; then\r\n    echo -e \"Downloading MC server.properties\"\r\n    curl -o server.properties https:\/\/raw.githubusercontent.com\/kylegroves6\/Pelican-Egg-Configs\/refs\/heads\/main\/Eggs\/Minecraft\/Purpur\/Purpur-for-Velocity\/server.properties\r\nfi\r\n\r\n# --- Step 3: Clear Old Plugins & Prepare Directory ---\r\necho \"INFO: Clearing old plugin JARs to ensure a clean installation...\"\r\nmkdir -p \/mnt\/server\/plugins\r\nrm -f \/mnt\/server\/plugins\/*.jar\r\n\r\n# --- Step 4: Clone Your Complete Plugin Library ---\r\n# Using a temporary directory inside the main server volume to avoid space issues.\r\nTEMP_PLUGIN_DIR=\"\/mnt\/server\/temp_plugins\"\r\nPRIVATE_REPO=\"private-mc-plugins\"\r\necho \"INFO: Cloning complete plugin library into ${TEMP_PLUGIN_DIR}...\"\r\ngit clone https:\/\/${GITHUB_TOKEN}@github.com\/${GITHUB_USER}\/${PRIVATE_REPO}.git ${TEMP_PLUGIN_DIR}\r\n\r\n# --- Step 5: Copy Plugins to Server ---\r\necho \"INFO: Installing plugins...\"\r\nmkdir -p \/mnt\/server\/plugins\r\n\r\n# Copy all shared plugins using the simple 'cp' command\r\necho \"INFO: Copying shared plugins...\"\r\nif [ -d \"${TEMP_PLUGIN_DIR}\/shared_plugins\" ] && [ -n \"$(ls -A ${TEMP_PLUGIN_DIR}\/shared_plugins\/*.jar 2>\/dev\/null)\" ]; then\r\n    cp ${TEMP_PLUGIN_DIR}\/shared_plugins\/*.jar \/mnt\/server\/plugins\/\r\nfi\r\n\r\n# Copy server-specific plugins using the simple 'cp' command\r\necho \"INFO: Copying plugins for server type: ${NETWORK_SERVER}...\"\r\nif [ -d \"${TEMP_PLUGIN_DIR}\/${NETWORK_SERVER}\" ] && [ -n \"$(ls -A ${TEMP_PLUGIN_DIR}\/${NETWORK_SERVER}\/*.jar 2>\/dev\/null)\" ]; then\r\n    cp ${TEMP_PLUGIN_DIR}\/${NETWORK_SERVER}\/*.jar \/mnt\/server\/plugins\/\r\nfi\r\n\r\n# --- Final Cleanup ---\r\necho \"INFO: Cleaning up temporary files...\"\r\nrm -rf ${TEMP_PLUGIN_DIR}\r\n\r\necho \"SUCCESS: Server and plugin installation is complete.\"",
            "container": "ghcr.io\/parkervcp\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Build Number",
            "description": "The build number for the Purpur release. Leave at latest for the recommended build.",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 1
        },
        {
            "name": "GitHub Access Token",
            "description": "A private GitHub Personal Access Token (PAT) with 'repo' scope for downloading private assets.",
            "env_variable": "GITHUB_TOKEN",
            "default_value": "",
            "user_viewable": false,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 5
        },
        {
            "name": "GitHub Username",
            "description": "The Username for the GitHub account that owns the PAT. This is used to identify the user for plugin downloads.",
            "env_variable": "GITHUB_USER",
            "default_value": "kylegroves6",
            "user_viewable": false,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 6
        },
        {
            "name": "Minecraft Version",
            "description": "The version of Minecraft to download.",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "max:20"
            ],
            "sort": 2
        },
        {
            "name": "Network Server",
            "description": "The name of the server on the network. This is used to identify the server for plugin downloads for GitHub",
            "env_variable": "NETWORK_SERVER",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string"
            ],
            "sort": 4
        },
        {
            "name": "Server Jar File",
            "description": "The name of the .jar file to run the server with.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": true,
            "user_editable": true,
            "rules": [
                "required",
                "string",
                "regex:\/^([\\w\\d._-]+)(\\.jar)$\/"
            ],
            "sort": 3
        }
    ]
}